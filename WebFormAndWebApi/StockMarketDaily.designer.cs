#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebFormAndWebApi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StockMarket")]
	public partial class StockMarketDailyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertstockMarketDaily(stockMarketDaily instance);
    partial void UpdatestockMarketDaily(stockMarketDaily instance);
    partial void DeletestockMarketDaily(stockMarketDaily instance);
    #endregion
		
		public StockMarketDailyDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["StockMarketConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StockMarketDailyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockMarketDailyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockMarketDailyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockMarketDailyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<stockMarketDaily> stockMarketDailies
		{
			get
			{
				return this.GetTable<stockMarketDaily>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stockMarketDaily")]
	public partial class stockMarketDaily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _StockClosingValue;
		
		private string _StockName;
		
		private char _StockUpOrDownSymbol;
		
		private decimal _StockUpOrDownValue;
		
		private System.DateTime _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockClosingValueChanging(System.Nullable<decimal> value);
    partial void OnStockClosingValueChanged();
    partial void OnStockNameChanging(string value);
    partial void OnStockNameChanged();
    partial void OnStockUpOrDownSymbolChanging(char value);
    partial void OnStockUpOrDownSymbolChanged();
    partial void OnStockUpOrDownValueChanging(decimal value);
    partial void OnStockUpOrDownValueChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public stockMarketDaily()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockClosingValue", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> StockClosingValue
		{
			get
			{
				return this._StockClosingValue;
			}
			set
			{
				if ((this._StockClosingValue != value))
				{
					this.OnStockClosingValueChanging(value);
					this.SendPropertyChanging();
					this._StockClosingValue = value;
					this.SendPropertyChanged("StockClosingValue");
					this.OnStockClosingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string StockName
		{
			get
			{
				return this._StockName;
			}
			set
			{
				if ((this._StockName != value))
				{
					this.OnStockNameChanging(value);
					this.SendPropertyChanging();
					this._StockName = value;
					this.SendPropertyChanged("StockName");
					this.OnStockNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockUpOrDownSymbol", DbType="Char(1) NOT NULL")]
		public char StockUpOrDownSymbol
		{
			get
			{
				return this._StockUpOrDownSymbol;
			}
			set
			{
				if ((this._StockUpOrDownSymbol != value))
				{
					this.OnStockUpOrDownSymbolChanging(value);
					this.SendPropertyChanging();
					this._StockUpOrDownSymbol = value;
					this.SendPropertyChanged("StockUpOrDownSymbol");
					this.OnStockUpOrDownSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockUpOrDownValue", DbType="Decimal(10,4) NOT NULL")]
		public decimal StockUpOrDownValue
		{
			get
			{
				return this._StockUpOrDownValue;
			}
			set
			{
				if ((this._StockUpOrDownValue != value))
				{
					this.OnStockUpOrDownValueChanging(value);
					this.SendPropertyChanging();
					this._StockUpOrDownValue = value;
					this.SendPropertyChanged("StockUpOrDownValue");
					this.OnStockUpOrDownValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
